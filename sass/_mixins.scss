// Define vertical, horizontal, ou both position
@mixin center($position) {
  position: absolute;
  
  @if $position == 'vertical' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'horizontal' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}
// Como usar
.exemplo {
  @include center(both);
}
// Fim alinhamento


// Clearfix mixin
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
// Como Usar
.container-with-floated-children {
  @extend %clearfix;
}
// Fim Clearfix


// Define default font size
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
// Como usar
p {
  @include font-size(14px)
}
// Fim Font Size




// Background Gradient
@mixin background-gradient($start-color, $end-color, $orientation) { 
    background: $start-color;

    @if $orientation == 'vertical' {
      background: -webkit-linear-gradient(top, $start-color, $end-color);
      background: linear-gradient(to bottom, $start-color, $end-color);
    } @else if $orientation == 'horizontal' {
      background: -webkit-linear-gradient(left, $start-color, $end-color);
      background: linear-gradient(to right, $start-color, $end-color);
    } @else {
      background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
      background: radial-gradient(ellipse at center, $start-color, $end-color);
    }
}
 // Como usar
.exemplo {
  @include background-gradient(red, black, 'vertical');
}
// Fim Background Gradient




// Box Shadow
// $a = Esquerda ou Direita
// $b = Cima ou Baixo
// $c = Nível de esfumaçado

@mixin box-shadow($a, $b, $c, $cor) {
  box-shadow: $a $b $c $cor;
  -webkit-box-shadow: $a $b $c $cor;
  -moz-box-shadow: $a $b $c $cor;
  -ms-box-shadow: $a $b $c $cor;
  -o-box-shadow: $a $b $c $cor;
}
// @include box-shadow(0, 8px, 10px, rgba(0,0,0,0.14))
// Fim Box Shadow


// Botão 
@mixin corBotao($cor, $corHover) {
    background: transparent;
    cursor: pointer;
    text-align: center;
    border: 2px solid $cor;
    color: $cor;
    transition: .5s ease-out;
    &:hover {
        background: $cor;
        color: $corHover;    
        transition: .2s ease-in;
    }
}

@mixin btnRedon {   
    padding: 10px 20px;
    border-radius: 50px;
}
@mixin btnQuad {
    padding: 10px 20px;
}

.btn-azul {
    @include corBotao(blue, white);
    @include btnQuad;
}
// Fim Botão